{"version":3,"sources":["./src/styles.css","./node_modules/@angular/material/core/ripple/_ripple.scss","./src/theme.scss","./node_modules/@angular/cdk/a11y/_index.scss","./node_modules/@angular/cdk/overlay/_index.scss","./node_modules/@angular/cdk/text-field/_index.scss","./node_modules/@angular/material/core/focus-indicators/_private.scss","./node_modules/@angular/material/core/style/_layout-common.scss"],"sourcesContent":[".labels, mat-label, .mat-label{\r\n    font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif !important;\r\n}\r\n\r\n.mdc-tab-indicator__content--underline {\r\n  --mdc-tab-indicator-active-indicator-color: var(--primary) !important;\r\n}\r\n\r\n.mdc-tab-indicator__content--underline :active {\r\n  --mdc-tab-indicator-active-indicator-color: var(--primary) !important;\r\n}\r\n\r\n.mat-mdc-tab.mdc-tab--active .mdc-tab__text-label {\r\n    color: var(--primary) !important;\r\n} \r\n\r\n.mdc-tab-indicator {\r\n    color: var(--primary) !important;\r\n}\r\n\r\n.mat-mdc-tab-group, .mat-mdc-tab-nav-bar {\r\n    --mdc-tab-indicator-active-indicator-color:  !important;\r\n    --mat-tab-header-disabled-ripple-color: var(--primary) !important;\r\n    --mat-tab-header-pagination-icon-color: var(--primary) !important;\r\n    --mat-tab-header-inactive-label-text-color: var(--color-text) !important;\r\n    --mat-tab-header-active-label-text-color: var(--primary) !important;\r\n    --mat-tab-header-active-ripple-color: var(--primary) !important;\r\n    --mat-tab-header-inactive-ripple-color:var(--color-text) !important;\r\n    --mat-tab-header-inactive-focus-label-text-color:var(--color-text) !important;\r\n    --mat-tab-header-inactive-hover-label-text-color:var(--color-text) !important;\r\n    --mat-tab-header-active-focus-label-text-color: var(--primary) !important;\r\n    --mat-tab-header-active-hover-label-text-color: var(--primary) !important;\r\n    --mat-tab-header-active-focus-indicator-color: var(--primary) !important;\r\n    --mat-tab-header-active-hover-indicator-color: var(--primary) !important;\r\n}\r\n\r\n.mat-mdc-text-field-wrapper{\r\n    border-radius: 10px !important;\r\n}\r\n\r\n.mdc-notched-outline{\r\n    color: transparent !important;\r\n}\r\n\r\n.mat-mdc-text-field-wrapper.mdc-text-field--outlined .mat-mdc-form-field-infix {\r\n    padding-top: 0 !important;\r\n    padding-bottom: 0 !important;\r\n}\r\n\r\n.mat-mdc-form-field-infix {\r\n    min-height: 0 !important;\r\n}\r\n\r\n.mat-mdc-form-field{\r\n    min-height: 0 !important;\r\n    border: 0.1px solid var(--secondary);\r\n    border-radius: 0 0 0 5px;\r\n}\r\n\r\n.mdc-text-field--filled:not(.mdc-text-field--disabled) {\r\n    background-color: var(--background-color) !important;\r\n    color: var(--background-color) !important;\r\n}\r\n\r\ndiv.mat-mdc-select-panel {\r\n    color: var(--color-text) !important;\r\n    background-color: var(--background-color) !important;\r\n    margin-top: -5px;\r\n    border-top: 0.5px solid var(--primary);\r\n    border-radius: 1px 1px 0 10px !important;\r\n}\r\n\r\n.mat-mdc-option {\r\n    color: var(--color-text) !important;\r\n}\r\n\r\n.mat-mdc-option.mdc-list-item--selected:not(.mdc-list-item--disabled) .mdc-list-item__primary-text {\r\n    color: var(--primary) !important;\r\n}\r\n\r\n.mat-mdc-option.mdc-list-item--selected:not(.mdc-list-item--disabled):not(.mat-mdc-option-multiple) {\r\n    border-color:var(--primary) !important;\r\n    border-radius: 10px !important;\r\n}\r\n\r\n.mat-mdc-option.mdc-list-item--selected:not(.mdc-list-item--disabled):not(.mat-mdc-option-multiple) {\r\n    border: 2px solid var(--primary);\r\n}\r\n\r\n.mat-mdc-option.mdc-list-item--selected:not(.mdc-list-item--disabled):not(.mat-mdc-option-multiple):active {\r\n    animation: button-illumination 0.3s, button-movement 1s infinite alternate;\r\n}\r\n\r\n.mat-mdc-select-arrow svg {\r\n    color: var(--primary) !important;\r\n}\r\n\r\n.mat-mdc-select-arrow {\r\n    color: var(--primary) !important;\r\n}\r\n\r\n.mat-primary .mat-pseudo-checkbox-checked.mat-pseudo-checkbox-minimal::after, .mat-primary .mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-minimal::after {\r\n    color: var(--primary) !important;\r\n}\r\n\r\n.mat-mdc-select {\r\n    color: var(--color-text) !important;\r\n}\r\n\r\n.mat-mdc-form-field-hint-spacer {\r\n    flex: 1 0 1em;\r\n}\r\n\r\n::-webkit-scrollbar {\r\n    width: 5px;\r\n    overflow-y: scroll;\r\n    overflow-x: scroll;\r\n    height: 10px;\r\n    background: var(--secondary);\r\n    box-shadow: inset 0 0 4px #707070;\r\n}\r\n\r\n::-webkit-scrollbar-thumb {\r\n    background: var(--secondary);\r\n    border-radius: 10px;\r\n}\r\n\r\n@media only screen and (max-width: 600px) {\r\n    btnCount {\r\n        font-size: 22px;\r\n        padding: 8px 16px;\r\n    }\r\n}\r\n\r\n@keyframes button-illumination {\r\nfrom {\r\n    background-color: var(--background-color);\r\n}\r\nto {\r\n    background-color: var(--primary);\r\n}\r\n}\r\n  \r\n@keyframes button-movement {\r\nfrom {\r\n    transform: translateX(0); \r\n}\r\nto {\r\n    transform: translateX(10px);\r\n}\r\n}\r\n\r\n.mdc-button {\r\n    min-width: 33px !important;\r\n}\r\n\r\n.mat-mdc-button>.mat-icon {\r\n    margin-right: 0 !important;\r\n    padding-bottom: 10px !important;\r\n    padding-right: 0 !important;\r\n    padding-left: 5px !important;\r\n    font-size: 15px !important;\r\n    height: auto !important;\r\n    width: auto !important;\r\n    color: var(--color-text) !important; \r\n}\r\n\r\n.mat-mdc-menu-item {\r\n    margin-top: 5px !important;\r\n    min-width: 100% !important;\r\n    min-height: 33px !important;\r\n    margin-right: 0 !important;\r\n    padding: 5px !important;\r\n    font-size: 15px !important;\r\n    height: auto !important;\r\n    width: auto !important;\r\n    background-color: var(--secondary) !important;\r\n    color: var(--color-text) !important; \r\n}\r\n\r\n.mat-mdc-menu-panel.mat-mdc-menu-panel{\r\n    margin-top: 2px !important;\r\n    margin-right: -15px;\r\n}\r\n\r\n.mat-mdc-menu-panel {\r\n    border-radius: 10px !important;\r\n    padding: 2px !important;\r\n}\r\n\r\n.tooltipC {\r\n    background-color: var(--background-color);\r\n    color: var(--color-text);\r\n    border: 1px solid var(--secondary);\r\n    padding: 3px 6px; \r\n    font-size: 14px;\r\n    font-weight: bold;\r\n    border-radius: 20px;\r\n    font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;\r\n}\r\n\r\n.mat-mdc-menu-item .mat-icon {\r\n    margin-right: 0 !important;\r\n}\r\n\r\n.mat-mdc-menu-item .mdc-list-item__primary-text {\r\n    width: 100% !important;\r\n}\r\n\r\n.mat-mdc-menu-content{\r\n    background-color: var(--background-color) !important;\r\n    margin-top: 2px !important;\r\n    padding-left: 5px !important;\r\n    padding-right: 5px !important;\r\n    padding-top: 2px !important;\r\n    border-radius: 10px !important;\r\n}\r\n\r\n.icons{\r\n    padding-top: 5px;\r\n    padding-right: 3.5px;\r\n    font-size: 15px;\r\n    color: var(--color-text); \r\n  }\r\n\r\n  .mat-button-toggle-appearance-standard .mat-button-toggle-label-content{\r\n    padding: 0 !important;\r\n    padding-top: 5px;\r\n  }\r\n\r\n  .mat-button-toggle-label-content>*{\r\n    vertical-align: baseline !important;\r\n  }\r\n\r\n  .mat-mdc-icon-button:disabled {\r\n    color: var(--secondary) !important; \r\n  }\r\n\r\n  mat-cell, mat-header-cell, mat-footer-cell{\r\n    flex: none !important;\r\n  }\r\n\r\n  mat-cell:first-of-type, mat-header-cell:first-of-type, mat-footer-cell:first-of-type {\r\n    padding-left: 10px !important;\r\n  }\r\n\r\n  .mat-mdc-paginator-container {\r\n    color: var(--color-text) !important;\r\n  }\r\n\r\n  @media (max-width: 768px) {\r\n    .mat-mdc-menu-item .mat-mdc-menu-ripple{\r\n        width: 25px !important;\r\n    }\r\n}\r\n\r\n.mdc-data-table__table{\r\n    min-height: 80% !important;\r\n}\r\n\r\n  .colored-text0 {\r\n    color: var(--color-text);\r\n  }\r\n\r\n  .colored-text1 {\r\n    color: #3498DB\r\n  }\r\n\r\n  .colored-text2 {\r\n    color: var(--primary);\r\n  }\r\n\r\n  .colored-text3 {\r\n    color: blue;\r\n  }\r\n\r\n  .colored-text4 {\r\n    color: rgb(80, 91, 141);\r\n  }\r\n\r\n  .mat-paginator-range-label {\r\n    order: 2;\r\n    color: red !important;\r\n}\r\n\r\n.mat-paginator .mat-paginator-navigation-previous .mat-paginator-icon {\r\n    position: relative;\r\n    content: \"Hola\" !important;\r\n  }\r\n  \r\n  .mat-paginator .mat-paginator-navigation-previous {\r\n    content: \"Hola\" !important;\r\n    position: absolute;\r\n    top: -25px;\r\n    left: 50%;\r\n    transform: translateX(-50%);\r\n    background-color: #007bff;\r\n    color: white !important;\r\n    padding: 5px;\r\n    border-radius: 5px;\r\n    white-space: nowrap;\r\n    opacity: 0;\r\n    visibility: hidden;\r\n    transition: opacity 0.2s, visibility 0.2s;\r\n  }\r\n  \r\n  .mat-paginator .mat-paginator-navigation-previous .mat-paginator-icon:hover::after {\r\n    opacity: 1;\r\n    visibility: visible;\r\n  }\r\n  \r\n  .leaflet-bottom {\r\n    display: none !important;\r\n  }","@use '@angular/cdk';\n\n@mixin ripple() {\n  // The host element of an mat-ripple directive should always have a position of \"absolute\" or\n  // \"relative\" so that the ripples inside are correctly positioned relatively to the container.\n  .mat-ripple {\n    overflow: hidden;\n\n    // By default, every ripple container should have position: relative in favor of creating an\n    // easy API for developers using the MatRipple directive.\n    position: relative;\n\n    // Promote containers that have ripples to a new layer. We want to target `:not(:empty)`,\n    // because we don't want all ripple containers to have their own layer since they're used in a\n    // lot of places and the layer is only relevant while animating. Note that ideally we'd use\n    // the `contain` property here (see #13175), because `:empty` can be broken by having extra\n    // text inside the element, but it isn't very well supported yet.\n    &:not(:empty) {\n      transform: translateZ(0);\n    }\n  }\n\n  .mat-ripple.mat-ripple-unbounded {\n    overflow: visible;\n  }\n\n  .mat-ripple-element {\n    position: absolute;\n    border-radius: 50%;\n    pointer-events: none;\n\n    transition: opacity, transform 0ms cubic-bezier(0, 0, 0.2, 1);\n\n    // We use a 3d transform here in order to avoid an issue in Safari where\n    // the ripples aren't clipped when inside the shadow DOM (see #24028).\n    transform: scale3d(0, 0, 0);\n\n    // In high contrast mode the ripple is opaque, causing it to obstruct the content.\n    @include cdk.high-contrast(active, off) {\n      display: none;\n    }\n  }\n}\n",".mat-ripple {\n  overflow: hidden;\n  position: relative;\n}\n.mat-ripple:not(:empty) {\n  transform: translateZ(0);\n}\n\n.mat-ripple.mat-ripple-unbounded {\n  overflow: visible;\n}\n\n.mat-ripple-element {\n  position: absolute;\n  border-radius: 50%;\n  pointer-events: none;\n  transition: opacity, transform 0ms cubic-bezier(0, 0, 0.2, 1);\n  transform: scale3d(0, 0, 0);\n}\n.cdk-high-contrast-active .mat-ripple-element {\n  display: none;\n}\n\n.cdk-visually-hidden {\n  border: 0;\n  clip: rect(0 0 0 0);\n  height: 1px;\n  margin: -1px;\n  overflow: hidden;\n  padding: 0;\n  position: absolute;\n  width: 1px;\n  white-space: nowrap;\n  outline: 0;\n  -webkit-appearance: none;\n  -moz-appearance: none;\n  left: 0;\n}\n[dir=rtl] .cdk-visually-hidden {\n  left: auto;\n  right: 0;\n}\n\n.cdk-overlay-container, .cdk-global-overlay-wrapper {\n  pointer-events: none;\n  top: 0;\n  left: 0;\n  height: 100%;\n  width: 100%;\n}\n\n.cdk-overlay-container {\n  position: fixed;\n  z-index: 1000;\n}\n.cdk-overlay-container:empty {\n  display: none;\n}\n\n.cdk-global-overlay-wrapper {\n  display: flex;\n  position: absolute;\n  z-index: 1000;\n}\n\n.cdk-overlay-pane {\n  position: absolute;\n  pointer-events: auto;\n  box-sizing: border-box;\n  z-index: 1000;\n  display: flex;\n  max-width: 100%;\n  max-height: 100%;\n}\n\n.cdk-overlay-backdrop {\n  position: absolute;\n  top: 0;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  z-index: 1000;\n  pointer-events: auto;\n  -webkit-tap-highlight-color: transparent;\n  transition: opacity 400ms cubic-bezier(0.25, 0.8, 0.25, 1);\n  opacity: 0;\n}\n.cdk-overlay-backdrop.cdk-overlay-backdrop-showing {\n  opacity: 1;\n}\n.cdk-high-contrast-active .cdk-overlay-backdrop.cdk-overlay-backdrop-showing {\n  opacity: 0.6;\n}\n\n.cdk-overlay-dark-backdrop {\n  background: rgba(0, 0, 0, 0.32);\n}\n\n.cdk-overlay-transparent-backdrop {\n  transition: visibility 1ms linear, opacity 1ms linear;\n  visibility: hidden;\n  opacity: 1;\n}\n.cdk-overlay-transparent-backdrop.cdk-overlay-backdrop-showing {\n  opacity: 0;\n  visibility: visible;\n}\n\n.cdk-overlay-backdrop-noop-animation {\n  transition: none;\n}\n\n.cdk-overlay-connected-position-bounding-box {\n  position: absolute;\n  z-index: 1000;\n  display: flex;\n  flex-direction: column;\n  min-width: 1px;\n  min-height: 1px;\n}\n\n.cdk-global-scrollblock {\n  position: fixed;\n  width: 100%;\n  overflow-y: scroll;\n}\n\ntextarea.cdk-textarea-autosize {\n  resize: none;\n}\n\ntextarea.cdk-textarea-autosize-measuring {\n  padding: 2px 0 !important;\n  box-sizing: content-box !important;\n  height: auto !important;\n  overflow: hidden !important;\n}\n\ntextarea.cdk-textarea-autosize-measuring-firefox {\n  padding: 2px 0 !important;\n  box-sizing: content-box !important;\n  height: 0 !important;\n}\n\n@keyframes cdk-text-field-autofill-start { /*!*/ }\n@keyframes cdk-text-field-autofill-end { /*!*/ }\n.cdk-text-field-autofill-monitored:-webkit-autofill {\n  animation: cdk-text-field-autofill-start 0s 1ms;\n}\n\n.cdk-text-field-autofill-monitored:not(:-webkit-autofill) {\n  animation: cdk-text-field-autofill-end 0s 1ms;\n}\n\n.mat-focus-indicator {\n  position: relative;\n}\n.mat-focus-indicator::before {\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  position: absolute;\n  box-sizing: border-box;\n  pointer-events: none;\n  display: var(--mat-focus-indicator-display, none);\n  border: var(--mat-focus-indicator-border-width, 3px) var(--mat-focus-indicator-border-style, solid) var(--mat-focus-indicator-border-color, transparent);\n  border-radius: var(--mat-focus-indicator-border-radius, 4px);\n}\n.mat-focus-indicator:focus::before {\n  content: \"\";\n}\n\n.cdk-high-contrast-active {\n  --mat-focus-indicator-display: block;\n}\n\n.mat-mdc-focus-indicator {\n  position: relative;\n}\n.mat-mdc-focus-indicator::before {\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  position: absolute;\n  box-sizing: border-box;\n  pointer-events: none;\n  display: var(--mat-mdc-focus-indicator-display, none);\n  border: var(--mat-mdc-focus-indicator-border-width, 3px) var(--mat-mdc-focus-indicator-border-style, solid) var(--mat-mdc-focus-indicator-border-color, transparent);\n  border-radius: var(--mat-mdc-focus-indicator-border-radius, 4px);\n}\n.mat-mdc-focus-indicator:focus::before {\n  content: \"\";\n}\n\n.cdk-high-contrast-active {\n  --mat-mdc-focus-indicator-display: block;\n}","/// Emits a CSS class, `.cdk-visually-hidden`. This class can be applied to an element\n/// to make that element visually hidden while remaining available to assistive technology.\n@mixin a11y-visually-hidden() {\n  .cdk-visually-hidden {\n    border: 0;\n    clip: rect(0 0 0 0);\n    height: 1px;\n    margin: -1px;\n    overflow: hidden;\n    padding: 0;\n    position: absolute;\n    width: 1px;\n\n    // This works around a Chrome bug that can cause the tab to crash when large amounts of\n    // non-English text get wrapped: https://bugs.chromium.org/p/chromium/issues/detail?id=1201444\n    white-space: nowrap;\n\n    // Avoid browsers rendering the focus ring in some cases.\n    outline: 0;\n\n    // Avoid some cases where the browser will still render the native controls (see #9049).\n    -webkit-appearance: none;\n    -moz-appearance: none;\n\n    // We need at least one of top/bottom/left/right in order to prevent cases where the\n    // absolute-positioned element is pushed down and can affect scrolling (see #24597).\n    // `left` was chosen here, because it's the least likely to break overrides where the\n    // element might have been positioned (e.g. `mat-checkbox`).\n    left: 0;\n\n    [dir='rtl'] & {\n      left: auto;\n      right: 0;\n    }\n  }\n}\n\n/// @deprecated Use `a11y-visually-hidden`.\n@mixin a11y() {\n  @include a11y-visually-hidden;\n}\n\n/// Emits the mixin's content nested under `$selector-context` if `$selector-context`\n/// is non-empty.\n/// @param {String} selector-context The selector under which to nest the mixin's content.\n@mixin _optionally-nest-content($selector-context) {\n  @if ($selector-context == '') {\n    @content;\n  }\n  @else {\n    #{$selector-context} {\n      @content;\n    }\n  }\n}\n\n/// Applies styles for users in high contrast mode. Note that this only applies\n/// to Microsoft browsers. Chrome can be included by checking for the `html[hc]`\n/// attribute, however Chrome handles high contrast differently.\n///\n/// @param {String} target Type of high contrast setting to target. Defaults to `active`, can be\n///     `white-on-black` or `black-on-white`.\n/// @param {String} encapsulation Whether to emit styles for view encapsulation. Values are:\n///     * `on` - works for `Emulated`, `Native`, and `ShadowDom`\n///     * `off` - works for `None`\n///     * `any` - works for all encapsulation modes by emitting the CSS twice (default).\n@mixin high-contrast($target: active, $encapsulation: 'any') {\n  @if ($target != 'active' and $target != 'black-on-white' and $target != 'white-on-black') {\n    @error 'Unknown cdk-high-contrast value \"#{$target}\" provided. ' +\n           'Allowed values are \"active\", \"black-on-white\", and \"white-on-black\"';\n  }\n\n  @if ($encapsulation != 'on' and $encapsulation != 'off' and $encapsulation != 'any') {\n    @error 'Unknown cdk-high-contrast encapsulation \"#{$encapsulation}\" provided. ' +\n           'Allowed values are \"on\", \"off\", and \"any\"';\n  }\n\n  // If the selector context has multiple parts, such as `.section, .region`, just doing\n  // `.cdk-high-contrast-xxx #{&}` will only apply the parent selector to the first part of the\n  // context. We address this by nesting the selector context under .cdk-high-contrast.\n  @at-root {\n    $selector-context: #{&};\n\n    @if ($encapsulation != 'on') {\n      // Note that if this selector is updated, the same change has to be made inside\n      // `_overlay.scss` which can't depend on this mixin due to some infrastructure limitations.\n      .cdk-high-contrast-#{$target} {\n        @include _optionally-nest-content($selector-context) {\n          @content;\n        }\n      }\n    }\n\n    @if ($encapsulation != 'off') {\n      .cdk-high-contrast-#{$target} :host {\n        @include _optionally-nest-content($selector-context) {\n          @content;\n        }\n      }\n    }\n  }\n}\n","// We want overlays to always appear over user content, so set a baseline\n// very high z-index for the overlay container, which is where we create the new\n// stacking context for all overlays.\n$overlay-container-z-index: 1000 !default;\n$overlay-z-index: 1000 !default;\n$overlay-backdrop-z-index: 1000 !default;\n\n// Background color for all of the backdrops\n$overlay-backdrop-color: rgba(0, 0, 0, 0.32) !default;\n\n// Default backdrop animation is based on the Material Design swift-ease-out.\n$backdrop-animation-duration: 400ms !default;\n$backdrop-animation-timing-function: cubic-bezier(0.25, 0.8, 0.25, 1) !default;\n\n/// Emits structural styles required for cdk/overlay to function.\n@mixin overlay() {\n  .cdk-overlay-container, .cdk-global-overlay-wrapper {\n    // Disable events from being captured on the overlay container.\n    pointer-events: none;\n\n    // The container should be the size of the viewport.\n    top: 0;\n    left: 0;\n    height: 100%;\n    width: 100%;\n  }\n\n  // The overlay-container is an invisible element which contains all individual overlays.\n  .cdk-overlay-container {\n    position: fixed;\n    z-index: $overlay-container-z-index;\n\n    &:empty {\n      // Hide the element when it doesn't have any child nodes. This doesn't\n      // include overlays that have been detached, rather than disposed.\n      display: none;\n    }\n  }\n\n  // We use an extra wrapper element in order to use make the overlay itself a flex item.\n  // This makes centering the overlay easy without running into the subpixel rendering\n  // problems tied to using `transform` and without interfering with the other position\n  // strategies.\n  .cdk-global-overlay-wrapper {\n    display: flex;\n    position: absolute;\n    z-index: $overlay-z-index;\n  }\n\n  // A single overlay pane.\n  .cdk-overlay-pane {\n    // Note: it's important for this one to start off `absolute`,\n    // in order for us to be able to measure it correctly.\n    position: absolute;\n    pointer-events: auto;\n    box-sizing: border-box;\n    z-index: $overlay-z-index;\n\n    // For connected-position overlays, we set `display: flex` in\n    // order to force `max-width` and `max-height` to take effect.\n    display: flex;\n    max-width: 100%;\n    max-height: 100%;\n  }\n\n  .cdk-overlay-backdrop {\n    // TODO(jelbourn): reuse sidenav fullscreen mixin.\n    position: absolute;\n    top: 0;\n    bottom: 0;\n    left: 0;\n    right: 0;\n\n    z-index: $overlay-backdrop-z-index;\n    pointer-events: auto;\n    -webkit-tap-highlight-color: transparent;\n    transition: opacity $backdrop-animation-duration $backdrop-animation-timing-function;\n    opacity: 0;\n\n    &.cdk-overlay-backdrop-showing {\n      opacity: 1;\n\n      // Note that we can't import and use the `high-contrast` mixin from `_a11y.scss`, because\n      // this file will be copied to the top-level `cdk` package when putting together the files\n      // for npm. Any relative import paths we use here will become invalid once the file is copied.\n      .cdk-high-contrast-active & {\n        // In high contrast mode the rgba background will become solid\n        // so we need to fall back to making it opaque using `opacity`.\n        opacity: 0.6;\n      }\n    }\n  }\n\n  .cdk-overlay-dark-backdrop {\n    background: $overlay-backdrop-color;\n  }\n\n  .cdk-overlay-transparent-backdrop {\n    // Define a transition on the visibility so that the `transitionend` event can fire immediately.\n    transition: visibility 1ms linear, opacity 1ms linear;\n    visibility: hidden;\n    opacity: 1;\n\n    // Note: as of Firefox 57, having the backdrop be `background: none` will prevent it from\n    // capturing the user's mouse scroll events. Since we also can't use something like\n    // `rgba(0, 0, 0, 0)`, we work around the inconsistency by not setting the background at\n    // all and using `opacity` to make the element transparent.\n    &.cdk-overlay-backdrop-showing {\n      opacity: 0;\n      visibility: visible;\n    }\n  }\n\n  .cdk-overlay-backdrop-noop-animation {\n    transition: none;\n  }\n\n  // Overlay parent element used with the connected position strategy. Used to constrain the\n  // overlay element's size to fit within the viewport.\n  .cdk-overlay-connected-position-bounding-box {\n    position: absolute;\n    z-index: $overlay-z-index;\n\n    // We use `display: flex` on this element exclusively for centering connected overlays.\n    // When *not* centering, a top/left/bottom/right will be set which overrides the normal\n    // flex layout.\n    display: flex;\n\n    // We use the `column` direction here to avoid some flexbox issues in Edge\n    // when using the \"grow after open\" options.\n    flex-direction: column;\n\n    // Add some dimensions so the element has an `innerText` which some people depend on in tests.\n    min-width: 1px;\n    min-height: 1px;\n  }\n\n  // Used when disabling global scrolling.\n  .cdk-global-scrollblock {\n    position: fixed;\n\n    // Necessary for the content not to lose its width. Note that we're using 100%, instead of\n    // 100vw, because 100vw includes the width plus the scrollbar, whereas 100% is the width\n    // that the element had before we made it `fixed`.\n    width: 100%;\n\n    // Note: this will always add a scrollbar to whatever element it is on, which can\n    // potentially result in double scrollbars. It shouldn't be an issue, because we won't\n    // block scrolling on a page that doesn't have a scrollbar in the first place.\n    overflow-y: scroll;\n  }\n}\n","// Structural styles for the autosize text fields.\n@mixin text-field-autosize() {\n  // Remove the resize handle on autosizing textareas, because whatever height\n  // the user resized to will be overwritten once they start typing again.\n  textarea.cdk-textarea-autosize {\n    resize: none;\n  }\n\n  // This class is temporarily applied to the textarea when it is being measured. It is immediately\n  // removed when measuring is complete. We use `!important` rules here to make sure user-specified\n  // rules do not interfere with the measurement.\n  textarea.cdk-textarea-autosize-measuring {\n    @include _autosize-measuring-base;\n    height: auto !important;\n    overflow: hidden !important;\n  }\n\n  // Similar to the `cdk-textarea-autosize-measuring` class, but only applied on Firefox. We need\n  // to use this class, because Firefox has a bug where changing the `overflow` breaks the user's\n  // ability to undo/redo what they were typing (see #16629). This class is only scoped to Firefox,\n  // because the measurements there don't seem to be affected by the `height: 0`, whereas on other\n  // browsers they are, e.g. Chrome detects longer text and IE does't resize back to normal.\n  // Identical issue report: https://bugzilla.mozilla.org/show_bug.cgi?id=448784\n  textarea.cdk-textarea-autosize-measuring-firefox {\n    @include _autosize-measuring-base;\n    height: 0 !important;\n  }\n}\n\n// Core styles that enable monitoring autofill state of text fields.\n@mixin text-field-autofill() {\n  // Keyframes that apply no styles, but allow us to monitor when an text field becomes autofilled\n  // by watching for the animation events that are fired when they start. Note: the /*!*/ comment is\n  // needed to prevent LibSass from stripping the keyframes out.\n  // Based on: https://medium.com/@brunn/detecting-autofilled-fields-in-javascript-aed598d25da7\n  @keyframes cdk-text-field-autofill-start {/*!*/}\n  @keyframes cdk-text-field-autofill-end {/*!*/}\n\n  .cdk-text-field-autofill-monitored:-webkit-autofill {\n    // Since Chrome 80 we need a 1ms delay, or the animationstart event won't fire.\n    animation: cdk-text-field-autofill-start 0s 1ms;\n  }\n\n  .cdk-text-field-autofill-monitored:not(:-webkit-autofill) {\n    // Since Chrome 80 we need a 1ms delay, or the animationstart event won't fire.\n    animation: cdk-text-field-autofill-end 0s 1ms;\n  }\n}\n\n@mixin _autosize-measuring-base {\n  // Having 2px top and bottom padding seems to fix a bug where Chrome gets an incorrect\n  // measurement. We just have to account for it later and subtract it off the final result.\n  padding: 2px 0 !important;\n  box-sizing: content-box !important;\n}\n\n// Used to generate UIDs for keyframes used to change the text field autofill styles.\n$autofill-color-frame-count: 0;\n\n// Mixin used to apply custom background and foreground colors to an autofilled text field.\n// Based on: https://stackoverflow.com/questions/2781549/\n// removing-input-background-colour-for-chrome-autocomplete#answer-37432260\n@mixin text-field-autofill-color($background, $foreground:'') {\n  @keyframes cdk-text-field-autofill-color-#{$autofill-color-frame-count} {\n    to {\n      background: $background;\n      @if $foreground != '' { color: $foreground; }\n    }\n  }\n\n  &:-webkit-autofill {\n    animation: cdk-text-field-autofill-color-#{$autofill-color-frame-count} both;\n  }\n\n  &.cdk-text-field-autofill-monitored:-webkit-autofill {\n    // Since Chrome 80 we need a 1ms delay for cdk-text-field-autofill-start, or the animationstart\n    // event won't fire.\n    animation: cdk-text-field-autofill-start 0s 1ms,\n               cdk-text-field-autofill-color-#{$autofill-color-frame-count} both;\n  }\n\n  $autofill-color-frame-count: $autofill-color-frame-count + 1 !global;\n}\n\n// @deprecated Use `autosize` and `autofill` instead.\n@mixin text-field {\n  @include text-field-autosize();\n  @include text-field-autofill();\n}\n","@use 'sass:map';\n@use 'sass:meta';\n@use '@angular/cdk';\n@use '../style/layout-common';\n@use '../theming/theming';\n\n// Private sass variables that will be used as reference throughout component stylesheets.\n$default-border-width: 3px;\n$default-border-style: solid;\n$default-border-color: transparent;\n$default-border-radius: 4px;\n\n// Mixin that renders the focus indicator structural styles.\n@mixin structural-styling($prefix) {\n  .#{$prefix}-focus-indicator {\n    position: relative;\n\n    &::before {\n      @include layout-common.fill();\n      box-sizing: border-box;\n      pointer-events: none;\n      display: var(--#{$prefix}-focus-indicator-display, none); // Hide the indicator by default.\n      border: var(\n          --#{$prefix}-focus-indicator-border-width,\n          #{$default-border-width}\n        )\n        var(\n          --#{$prefix}-focus-indicator-border-style,\n          #{$default-border-style}\n        )\n        var(\n          --#{$prefix}-focus-indicator-border-color,\n          #{$default-border-color}\n        );\n      border-radius: var(\n        --#{$prefix}-focus-indicator-border-radius,\n        #{$default-border-radius}\n      );\n    }\n\n    // By default, render the focus indicator when the focus indicator host element takes focus.\n    // Defining a pseudo element's content will cause it to render.\n    &:focus::before {\n      content: '';\n    }\n  }\n\n  // Enable the indicator in high contrast mode.\n  @include cdk.high-contrast(active, off) {\n    @include customize-focus-indicators((display: block), $prefix);\n  }\n}\n\n// Generates CSS variable declarations from a map.\n@mixin _output-variables($map) {\n  @each $key, $value in $map {\n    @if ($value) {\n      --#{$key}: #{$value};\n    }\n  }\n}\n\n// Mixin that dedups CSS variables for the strong-focus-indicators mixin.\n@mixin customize-focus-indicators($config, $prefix) {\n  $border-style: map.get($config, border-style);\n  $border-width: map.get($config, border-width);\n  $border-radius: map.get($config, border-radius);\n  $border-color: map.get($config, border-color);\n  $display: map.get($config, display);\n  $map: (\n    '#{$prefix}-focus-indicator-border-style': $border-style,\n    '#{$prefix}-focus-indicator-border-width': $border-width,\n    '#{$prefix}-focus-indicator-border-radius': $border-radius,\n    '#{$prefix}-focus-indicator-border-color': $border-color,\n    '#{$prefix}-focus-indicator-display': $display,\n  );\n\n  @if (&) {\n    @include _output-variables($map);\n  }\n  @else {\n    // We use `html` here instead of `:root`, because the\n    // latter causes some issues with internal tooling.\n    html {\n      @include _output-variables($map);\n    }\n  }\n}\n\n@mixin strong-focus-indicators($config: ()) {\n  // Default focus indicator config.\n  $default-config: (\n      border-color: black,\n      display: block,\n  );\n\n  // Merge default config with user config.\n  $config: map.merge($default-config, $config);\n\n  @include customize-focus-indicators($config, 'mat');\n}\n\n@mixin mdc-strong-focus-indicators($config: ()) {\n  // Default focus indicator config.\n  $default-config: (\n      border-color: black,\n      display: block,\n  );\n\n  // Merge default config with user config.\n  $config: map.merge($default-config, $config);\n\n  @include customize-focus-indicators($config, 'mat-mdc');\n}\n\n@mixin strong-focus-indicators-color($config-or-theme-or-color) {\n  @if meta.type-of($config-or-theme-or-color) == 'color' {\n    @include customize-focus-indicators((\n        border-color: $config-or-theme-or-color\n    ), 'mat');\n  }\n  @else {\n    $config: theming.get-color-config($config-or-theme-or-color);\n    $border-color: theming.get-color-from-palette(map.get($config, primary));\n    @include customize-focus-indicators((\n        border-color: $border-color\n    ), 'mat');\n  }\n}\n\n@mixin strong-focus-indicators-theme($theme-or-color-config-or-color) {\n  @if meta.type-of($theme-or-color-config-or-color) == 'color' {\n    @include customize-focus-indicators((\n        border-color: $theme-or-color-config-or-color\n    ), 'mat');\n  }\n  @else {\n    $theme: theming.private-legacy-get-theme($theme-or-color-config-or-color);\n    @include theming.private-check-duplicate-theme-styles($theme, 'mat-focus-indicators') {\n      $color: theming.get-color-config($theme);\n      @if $color != null {\n        @include strong-focus-indicators-color($color);\n      }\n    }\n  }\n}\n\n@mixin mdc-strong-focus-indicators-color($config-or-theme-or-color) {\n  @if meta.type-of($config-or-theme-or-color) == 'color' {\n    @include customize-focus-indicators((\n        border-color: $config-or-theme-or-color\n    ), 'mat-mdc');\n  }\n  @else {\n    $config: theming.get-color-config($config-or-theme-or-color);\n    $border-color: theming.get-color-from-palette(map.get($config, primary));\n    @include customize-focus-indicators((\n        border-color: $border-color\n    ), 'mat-mdc');\n  }\n}\n\n@mixin mdc-strong-focus-indicators-theme($theme-or-color-config-or-color) {\n  @if meta.type-of($theme-or-color-config-or-color) == 'color' {\n    @include customize-focus-indicators((\n        border-color: $theme-or-color-config-or-color\n    ), 'mat-mdc');\n  }\n  @else {\n    $theme: theming.private-legacy-get-theme($theme-or-color-config-or-color);\n    @include theming.private-check-duplicate-theme-styles($theme, 'mat-mdc-focus-indicators') {\n      $color: theming.get-color-config($theme);\n      @if $color != null {\n        @include mdc-strong-focus-indicators-color($color);\n      }\n    }\n  }\n}\n","// This mixin ensures an element spans to fill the nearest ancestor with defined positioning.\n@mixin fill {\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  position: absolute;\n}\n"],"mappings":"AAAA,6BACI,gEAGJ,sFACE,sEAOF,qEACI,+BAOJ,wCACI,uDACA,kEACA,kEACA,yEACA,oEACA,gEACA,oEACA,8EACA,8EACA,0EACA,0EACA,yEACA,yEAGJ,4BApCA,6BAwCA,qBACI,4BAGJ,+EACI,wBACA,2BAGJ,0BACI,uBAGJ,oBACI,uBACA,mCAvDJ,wBA2DA,uDACI,mDACA,wCAGJ,yBACI,kCACA,mDACA,gBACA,qCApEJ,uCAwEA,gBACI,kCAGJ,mGACI,+BAGJ,oGACI,sCAjFJ,6BAqFA,oGACI,gCAGJ,2GACI,wEAGJ,0BACI,+BAGJ,sBACI,+BAGJ,8JACI,+BAGJ,gBACI,kCAGJ,gCACI,aAGJ,oBACI,UACA,kBACA,kBACA,YACA,4BACA,iCAGJ,0BACI,4BA3HJ,mBA+HA,0CACI,SACI,eAjIR,kBAsIA,kCAEI,4CAGA,iCAIJ,8BAEI,0BAGA,2BAIJ,YACI,yBAGJ,0BACI,yBACA,8BACA,0BACA,2BACA,yBACA,sBACA,qBACA,kCAGJ,mBACI,yBACA,yBACA,0BACA,yBA3KJ,sBA6KI,yBACA,sBACA,qBACA,4CACA,kCAGJ,uCACI,yBACA,mBAGJ,oBAzLA,mDA8LA,UACI,yCACA,wBACA,kCAjMJ,gBAmMI,eACA,gBApMJ,mBAsMI,sDAGJ,6BACI,yBAGJ,gDACI,qBAGJ,sBACI,mDACA,yBACA,2BACA,4BACA,0BAtNJ,6BA0NA,OACI,gBACA,oBACA,eACA,wBAGF,wEAjOF,oBAmOI,gBAGF,mCACE,kCAGF,8BACE,iCAGF,yCACE,oBAGF,mFACE,4BAGF,6BACE,kCAGF,0BACE,wCACI,sBAIR,uBACI,yBAGF,eACE,wBAGF,eACE,cAGF,eACE,qBAGF,eACE,WAGF,eACE,cAGF,2BACE,QACA,oBAGJ,sEACI,kBACA,yBAGF,kDACE,yBACA,kBACA,UACA,SACA,0BACA,yBACA,qBAzSJ,8BA4SI,mBACA,UACA,kBACA,sCAGF,kFACE,UACA,mBAGF,gBACE,uBCnTF,YACE,gBAIA,kBAOA,wBACE,wBAIJ,iCACE,iBAGF,oBACE,kBD3BJ,kBC6BI,oBAEA,wDAIA,yBEeA,8CFXE,aEpCJ,qBACE,SACA,mBACA,WHNJ,YGQI,gBHRJ,UGUI,kBACA,UAIA,mBAGA,UAGA,wBACA,qBAMA,OAEA,+BACE,UACA,QChBJ,mDAEE,oBAGA,MACA,OACA,YACA,WAIF,uBACE,eACA,aAEA,6BAGE,aAQJ,4BACE,aACA,kBACA,aAIF,kBAGE,kBACA,oBACA,sBACA,aAIA,aACA,eACA,gBAGF,sBAEE,kBJnEJ,QIyEI,aACA,oBACA,wCACA,kDACA,UAEA,mDACE,UAKA,6EAGE,WAKN,2BACE,2BAGF,kCAEE,oDACA,kBACA,UAMA,+DACE,UACA,mBAIJ,qCACE,gBAKF,6CACE,kBACA,aAKA,aAIA,sBAGA,cACA,eAIF,wBACE,eAKA,WAKA,kBCjJF,+BACE,YAMF,yCLXF,wBKqDE,iCAxCE,sBACA,0BASF,iDLvBF,wBKqDE,iCA5BE,mBAUF,0CACA,wCAEA,oDAEE,+CAGF,0DAEE,6CC/BF,qBACE,kBAEA,4BNjBJ,QOME,kBDaI,sBACA,oBACA,iDACA,wJAYA,4DAQF,kCACE,WH2CA,0BG7BA,qCA3CJ,yBACE,kBAEA,gCNjBJ,QOME,kBDaI,sBACA,oBACA,qDACA,oKAYA,gEAQF,sCACE,WH2CA,0BG7BA","names":[],"sourceRoot":"webpack:///","file":"styles.5a1b05e3c4b55fa6.css","x_google_ignoreList":[1,3,4,5,6,7]}